package com.albertjk.dishrecommender

import android.content.Context
import android.util.Log
import com.github.doyaaaaaken.kotlincsv.dsl.csvReader

class CSVHelper {

    private val csvFileName = "bbc_good_food_dishes.csv"

    // These variables represent the column indices of the data in the CSV file.
    private val DISH_NAME_INDEX = 0
    private val CALORIES_INDEX = 1
    private val TOTAL_FAT_INDEX = 2
    private val SATURATED_FAT_INDEX = 3
    private val CARBOHYDRATES_INDEX = 4
    private val SUGARS_INDEX = 5
    private val SALT_INDEX = 6
    private val FIBRE_INDEX = 7
    private val PROTEIN_INDEX = 8

    /**
     * Reads the CSV file, from the assets directory, storing the dish data.
     * Creates Dish objects using the data,
     * and returns them in a list.
     */
    fun readCSVDatabase(context: Context) : List<Dish> {

        val dishes = ArrayList<Dish>()

        // Get the CSV file path from the assets directory.
        val csvFilePath = context.assets.open(csvFileName)

        Log.d("INFO", "CSV PATH: $csvFilePath")

        /* Open the CSV file.
        Read each line, create Dish objects, and store them in the dishes list.
        The input stream is then automatically closed. */
        csvReader().open(csvFilePath) {
            // The line list contains strings which were separated by commas in the current line in the file.
            readAllAsSequence().forEach { line: List<String> ->

                val dish = Dish(
                    0, // The id will be auto-generated by SQLite, but 0 is provided here to be able to create the object.
                    line[DISH_NAME_INDEX],
                    line[CALORIES_INDEX].toInt(),
                    // Remove the g (gram) letter from the nutrition data.
                    line[TOTAL_FAT_INDEX].split("g")[0].toFloat(),
                    line[SATURATED_FAT_INDEX].split("g")[0].toFloat(),
                    line[CARBOHYDRATES_INDEX].split("g")[0].toFloat(),
                    line[SUGARS_INDEX].split("g")[0].toFloat(),
                    line[SALT_INDEX].split("g")[0].toFloat(),
                    line[FIBRE_INDEX].split("g")[0].toFloat(),
                    line[PROTEIN_INDEX].split("g")[0].toFloat(),
                    0 // Initially, no dish is the user's favourite.
                )
                dishes.add(dish)
            }
        }
        return dishes
    }
}